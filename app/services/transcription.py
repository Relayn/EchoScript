"""
This service contains the core logic for transcribing audio sources.
"""
import whisper
from rich.console import Console

console = Console()


class TranscriptionService:
    """Orchestrates the transcription process."""

    def __init__(self, model: whisper.Whisper):
        self.model = model

    def transcribe(self, source_path: str, language: str | None) -> str:
        """
        –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.

        Args:
            source_path: –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
            language: –Ø–∑—ã–∫ –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).

        Returns:
            –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
        """
        console.print(
            "üéß [bold blue]–ù–∞—á–∏–Ω–∞—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é —Ñ–∞–π–ª–∞...[/bold blue] (–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –∏ –º–æ–¥–µ–ª–∏)"
        )

        # –ú–µ—Ç–æ–¥ .transcribe –∏–∑ whisper –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç None –¥–ª—è —è–∑—ã–∫–∞
        result = self.model.transcribe(audio=source_path, language=language, verbose=False)

        transcribed_text = result["text"].strip()
        return transcribed_text